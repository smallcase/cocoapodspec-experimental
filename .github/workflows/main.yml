name: Bump Version

on:
  workflow_dispatch:
    inputs:
      releaseType:
        type: choice
        description: "Release type"
        required: true
        options:
          - qa
          - internal
          - prod
      scheme:
        type: choice
        description: "Scheme"
        required: true
        options:
          - release
          - debug
      bumpType:
        type: choice
        description: "Version bump type"
        options:
          - patch
          - minor
          - major
          - auto
      scg:
        description: "SCGateway"
        type: boolean
        default: false
      loans:
        description: "SCLoans"
        type: boolean
        default: false
      bitrise:
        description: "Trigger Bitrise"
        type: boolean
        default: false
      scliVersion:
        description: "scli version"
        default: "v0.2.0-alpha-2"

env:
  SCG_INFO_PLIST: smallcase_gateway/SCGateway/Helpers/Info.plist
  LOANS_INFO_PLIST: loans/Loans/Info.plist
  SI_INFO_PLIST: SmartInvesting/Info.plist
  VERSION_KEY: CFBundleShortVersionString
  VERSION_CODE_KEY: CFBundleVersion
jobs:
  bump-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Set Git configuration
        run: |
          git config --global user.name "Github Action Bot"
          git config --global user.email "gatewaytech@smallcase.com"

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install scli
        uses: ./.github/actions/install-scli
        with:
          token: "${{ secrets.GH_ACCESS_TOKEN }}"
          version: "${{ github.event.inputs.scliVersion }}"

      - name: Bump scg
        if: ${{ inputs.scg }}
        id: bump-scg
        run: |
          if [ "${{ github.event.inputs.releaseType }}" == "prod" ];then
            scli versionBump "$SCG_INFO_PLIST" --bumpType "${{ github.event.inputs.bumpType }}" --vkey "$VERSION_KEY" --vckey "$VERSION_CODE_KEY"
          else
            scli versionBump "$SCG_INFO_PLIST" --onlyCode --vckey "$VERSION_CODE_KEY"
          fi
      - name: Bump loans
        if: ${{ inputs.loans }}
        id: bump-loans
        run: |
          if [ "${{ github.event.inputs.releaseType }}" == "prod" ];then
            scli versionBump "$LOANS_INFO_PLIST" --bumpType "${{ github.event.inputs.bumpType }}" --vkey "$VERSION_KEY" --vckey "$VERSION_CODE_KEY"
          else
            scli versionBump "$LOANS_INFO_PLIST" --onlyCode --vckey "$VERSION_CODE_KEY"
          fi    
      - name: Bump smart investing
        id: bump-si
        run: |
          if [ "${{ github.event.inputs.releaseType }}" == "prod" ];then
            scli versionBump "$SI_INFO_PLIST" --bumpType "${{ github.event.inputs.bumpType }}" --vkey "$VERSION_KEY" --vckey "$VERSION_CODE_KEY"
          else
            scli versionBump "$SI_INFO_PLIST" --onlyCode --vckey "$VERSION_CODE_KEY"
          fi

      - name: Set Versions
        id: set-versions
        run: |
          si_version=$(scli prop $SI_INFO_PLIST "$VERSION_KEY")
          si_version_code=$(scli prop $SI_INFO_PLIST "$VERSION_CODE_KEY")

          echo "::set-output name=si_version::$si_version"
          echo "::set-output name=si_version_code::$si_version_code"

          scg_version=$(scli prop $SCG_INFO_PLIST "$VERSION_KEY")
          scg_version_code=$(scli prop $SCG_INFO_PLIST "$VERSION_CODE_KEY")

          echo "::set-output name=scg_version::$scg_version"
          echo "::set-output name=scg_version_code::$scg_version_code"
          
          loans_version=$(scli prop $LOANS_INFO_PLIST "$VERSION_KEY")
          loans_version_code=$(scli prop $LOANS_INFO_PLIST "$VERSION_CODE_KEY")
          
          echo "::set-output name=loans_version::$loans_version"
          echo "::set-output name=loans_version_code::$loans_version_code"

          scg_podspec="smallcase_gateway/podspecs/${{ github.event.inputs.scheme }}/SCGateway-${{ github.event.inputs.releaseType }}.podspec.json"
          loans_podspec="loans/podspecs/${{ github.event.inputs.scheme }}/SCLoans-${{ github.event.inputs.releaseType }}.podspec.json"
          
          if [[ "${{ github.event.inputs.releaseType }}" == "prod" ]];then
            scg_podspec="smallcase_gateway/SCGateway.podspec.json"
            loans_podspec="loans/SCLoans.podspec.json"
          fi

          echo "::set-output name=scg_podspec::$scg_podspec"
          echo "::set-output name=loans_podspec::$loans_podspec"

      - name: Outputs
        run: |
          echo ${{ steps.set-versions.outputs.scg_version }}
          echo ${{ steps.set-versions.outputs.scg_version_code }}

          echo ${{ steps.set-versions.outputs.loans_version }}
          echo ${{ steps.set-versions.outputs.loans_version_code }}

          echo ${{ steps.set-versions.outputs.si_version }}
          echo ${{ steps.set-versions.outputs.si_version_code }}
          
          echo ${{ steps.set-versions.outputs.scg_podspec }}
          echo ${{ steps.set-versions.outputs.loans_podspec }}
      - name: Update SCG Podspec
        if: ${{ inputs.scg }}
        uses: ./.github/actions/update-podspec
        with:
          version: "${{ steps.set-versions.outputs.scg_version }}"
          versionCode: "${{ github.event.inputs.releaseType != 'prod' && steps.set-versions.outputs.scg_version_code || '' }}"
          scheme: "${{ github.event.inputs.scheme }}"
          podspec: "${{ steps.set-versions.outputs.scg_podspec }}"
      - name: Update Loans Podspec
        if: ${{ inputs.loans }}
        uses: ./.github/actions/update-podspec
        with:
          version: "${{ steps.set-versions.outputs.loans_version }}"
          versionCode: "${{ github.event.inputs.releaseType != 'prod' && steps.set-versions.outputs.loans_version_code || '' }}"
          scheme: "${{ github.event.inputs.scheme }}"
          podspec: "${{ steps.set-versions.outputs.loans_podspec }}"

      - name: Commit, Tag & Push
        run: |
          commit_type="chore(${{ github.event.inputs.releaseType }}):"
          si="si/${{ steps.set-versions.outputs.si_version }}"
          scg="scg/${{ steps.set-versions.outputs.scg_version }}"
          loans="loans/${{ steps.set-versions.outputs.loans_version }}"

          if [[ "${{ github.event.inputs.releaseType }}" == "prod" ]];then
            si+="-${{ steps.set-versions.outputs.si_version_code }}"
            scg+="-${{ steps.set-versions.outputs.scg_version_code }}"
            loans+="-${{ steps.set-versions.outputs.loans_version_code }}"
          fi

          commit_msg=""
          commit_desc="$scg, $loans, $si"

          if [[ "${{ inputs.scg }}" == "true" && "${{ inputs.loans }}" == "true" ]];then
            commit_msg="$commit_type $scg $loans"
          elif [[ "${{ inputs.scg }}" == true ]];then
            commit_msg="$commit_type $scg"
          elif [[ "${{ inputs.loans }}" == "true" ]];then
            commit_msg="$commit_type $loans"
          else
            commit_msg="$commit_type $si"
          fi

          git add .
          git status
          git commit -m "$commit_msg" -m "$commit_desc"
          
          git push

          if [[ "${{ github.event.inputs.releaseType }}" != "qa" ]];then
            tag_name=""
            if [[ "${{ inputs.scg }}" == "true" && "${{ inputs.loans }}" == "true" ]];then
              tag_name+="$scg-$loans"
            elif [[ "${{ inputs.scg }}" == "true" ]]; then
              tag_name+="$scg"
            elif [[ "${{ inputs.loans }}" == "true" ]]; then
              tag_name+="$loans"
            else
              tag_name+="$si"
            fi
            
            git tag "$tag_name"
            git push --tags

            if [[ "${{ github.event.inputs.releaseType }}" == "prod" ]];then
              gh release create "$tag_name" --title "$tag_name"
            fi
          fi
      
      - name: Trigger Bitrise Workflow
        if: ${{ inputs.bitrise }}
        run: |
          BITRISE_APP_SLUG="d6c77e34-9075-4262-8c39-12b4d5adf82c"

          WORKFLOW_ID="release-app"
          release_scg=false
          release_loans=false
          repo=""

          if [[ "${{ inputs.releaseType }}" != "qa" ]];then
            WORKFLOW_ID="release-sdks"
            release_scg="${{ inputs.scg }}"
            release_loans="${{ inputs.loans }}"

            if [[ "${{ github.event.inputs.releaseType }}" == "prod" ]];then
              repo="trunk"
            fi
          fi

          scli triggerBitrise --appSlug "$BITRISE_APP_SLUG" --workflowId "${WORKFLOW_ID}" --branch "${{ github.head_ref || github.ref_name }}" \
          --bitriseToken "${{ secrets.BITRISE_API_TOKEN }}" \
          --envs "OVERRIDE_RELEASE_SCG=$release_scg,\
          OVERRIDE_RELEASE_LOANS=$release_loans,\
          OVERRIDE_BITRISE_SCHEME=${{ inputs.scheme }},\
          OVERRIDE_SCG_PODSPEC=${{ steps.set-versions.outputs.scg_podspec }},\
          OVERRIDE_LOANS_PODSPEC=${{ steps.set-versions.outputs.loans_podspec }},\
          OVERRIDE_COCOA_REPO=$repo" \
          --message "$(git log -1 --pretty=%B%n%H)"
