#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
#ifndef SCGATEWAY_SWIFT_H
#define SCGATEWAY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SCGateway",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class UICollectionViewLayout;
@class NSCoder;

SWIFT_CLASS("_TtC9SCGateway26ContentSizedCollectionView")
@interface ContentSizedCollectionView : UICollectionView
@property (nonatomic) CGSize contentSize;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, Environment, open) {
  EnvironmentDevelopment = 0,
  EnvironmentProduction = 1,
  EnvironmentStaging = 2,
};

@class NSString;

SWIFT_CLASS("_TtC9SCGateway13GatewayConfig")
@interface GatewayConfig : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified gatewayName;
@property (nonatomic) BOOL isAmoEnabled;
- (nonnull instancetype)initWithGatewayName:(NSString * _Nonnull)gatewayName brokerConfig:(NSArray<NSString *> * _Nullable)brokerConfig apiEnvironment:(enum Environment)apiEnvironment isLeprechaunActive:(BOOL)isLeprechaunActive isAmoEnabled:(BOOL)isAmoEnabled OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9SCGateway20ObjcTransactionError")
@interface ObjcTransactionError : NSError
@property (nonatomic, readonly, copy) NSString * _Nonnull domain;
@property (nonatomic, readonly) NSInteger code;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end

@class NSURL;

SWIFT_CLASS("_TtC9SCGateway9SCGateway")
@interface SCGateway : NSObject
/// Shared Instance
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SCGateway * _Nonnull shared;)
+ (SCGateway * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull currentTransactionId;)
+ (NSString * _Nonnull)currentTransactionId SWIFT_WARN_UNUSED_RESULT;
+ (void)setCurrentTransactionId:(NSString * _Nonnull)value;
- (void)setupWithConfig:(GatewayConfig * _Nonnull)config SWIFT_DEPRECATED;
- (void)setupWithConfig:(GatewayConfig * _Nonnull)config completion:(void (^ _Nullable)(BOOL, NSError * _Nullable))completion;
/// \param sdkToken It is a JWT containing broker account identification payload, and signed with the shared secret.
/// It can be created for guest as well as connected users.
///
- (void)initializeGateway:(NSString * _Nonnull)authToken completion:(void (^ _Nullable)(NSString * _Nonnull, NSError * _Nullable))completion;
/// \param sdkToken It is a JWT containing broker account identification payload, and signed with the shared secret.
/// It can be created for guest as well as connected users.
///
- (void)initializeGatewayWithSdkToken:(NSString * _Nonnull)sdkToken completion:(void (^ _Nullable)(BOOL, NSError * _Nullable))completion;
- (BOOL)isUserConnected SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getUserAuthToken SWIFT_WARN_UNUSED_RESULT;
- (void)setSDKTypeWithType:(NSString * _Nonnull)type;
- (void)setHybridSDKVersionWithVersion:(NSString * _Nonnull)version;
- (NSString * _Nonnull)getSdkVersion SWIFT_WARN_UNUSED_RESULT;
- (void)handleBrokerRedirectionWithRedirectUrl:(NSURL * _Nonnull)redirectUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class UIViewController;
@class SmallplugData;
@class SmallplugUiConfig;

@interface SCGateway (SWIFT_EXTENSION(SCGateway))
- (void)launchSmallPlugWithPresentingController:(UIViewController * _Nonnull)presentingController smallplugData:(SmallplugData * _Nullable)smallplugData completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)launchSmallPlugWithPresentingController:(UIViewController * _Nonnull)presentingController smallplugData:(SmallplugData * _Nullable)smallplugData smallplugUiConfig:(SmallplugUiConfig * _Nullable)smallplugUiConfig completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)logoutUserWithPresentingController:(UIViewController * _Nonnull)presentingController completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
- (void)showOrdersWithPresentingController:(UIViewController * _Nonnull)presentingController completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
@end

@class SignUpConfig;

@interface SCGateway (SWIFT_EXTENSION(SCGateway))
- (void)openUsEquitiesAccountWithPresentingController:(UIViewController * _Nonnull)presentingController;
- (void)openUsEquitiesAccountWithPresentingController:(UIViewController * _Nonnull)presentingController signUpConfig:(SignUpConfig * _Nonnull)signUpConfig completion:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completion;
- (void)openUsEquitiesAccountWithPresentingController:(UIViewController * _Nonnull)presentingController signUpConfig:(SignUpConfig * _Nullable)signUpConfig;
- (void)openUsEquitiesAccountWithPresentingController:(UIViewController * _Nonnull)presentingController signUpConfig:(SignUpConfig * _Nonnull)signUpConfig additionalConfig:(NSDictionary<NSString *, id> * _Nullable)additionalConfig completion:(void (^ _Nonnull)(NSString * _Nullable, NSError * _Nullable))completion;
- (void)openUsEquitiesAccountWithPresentingController:(UIViewController * _Nonnull)presentingController signUpConfig:(SignUpConfig * _Nonnull)signUpConfig additionalConfig:(NSDictionary<NSString *, id> * _Nullable)additionalConfig;
@end

@class NSData;

@interface SCGateway (SWIFT_EXTENSION(SCGateway))
- (void)getSmallcasesWithParams:(NSDictionary<NSString *, id> * _Nullable)params completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getSmallcaseProfileWithScid:(NSString * _Nonnull)scid completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getSmallcaseNewsWithScid:(NSString * _Nullable)scid iscid:(NSString * _Nullable)iscid optionalParams:(NSDictionary<NSString *, id> * _Nullable)optionalParams completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getUserInvestmentsWithIscids:(NSArray<NSString *> * _Nullable)iscids completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getExitedSmallcasesWithCompletion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)markSmallcaseArchiveWithIscid:(NSString * _Nonnull)iscid completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getUserInvestmentDetailsWithIscid:(NSString * _Nonnull)iscid completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getHistoricalWithScid:(NSString * _Nonnull)scid benchmarkId:(NSString * _Nonnull)benchmarkId base:(NSInteger)base duration:(NSString * _Nullable)duration completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
@end


@interface SCGateway (SWIFT_EXTENSION(SCGateway))
/// Only for objective C compatibility
- (void)triggerTransactionFlowWithTransactionId:(NSString * _Nonnull)transactionId presentingController:(UIViewController * _Nonnull)presentingController completion:(void (^ _Nonnull)(id _Nullable, ObjcTransactionError * _Nullable))completion;
- (void)triggerTransactionFlowWithTransactionId:(NSString * _Nonnull)transactionId presentingController:(UIViewController * _Nonnull)presentingController utmParams:(NSDictionary<NSString *, NSString *> * _Nullable)utmParams brokerConfig:(NSArray<NSString *> * _Nullable)brokerConfig completion:(void (^ _Nonnull)(id _Nullable, ObjcTransactionError * _Nullable))completion;
- (void)triggerTransactionFlowWithTransactionId:(NSString * _Nonnull)transactionId presentingController:(UIViewController * _Nonnull)presentingController utmParams:(NSDictionary<NSString *, NSString *> * _Nullable)utmParams completion:(void (^ _Nonnull)(id _Nullable, ObjcTransactionError * _Nullable))completion;
- (void)triggerMfTransactionWithPresentingController:(UIViewController * _Nonnull)presentingController transactionId:(NSString * _Nonnull)transactionId completion:(void (^ _Nonnull)(id _Nullable, ObjcTransactionError * _Nullable))completion;
- (void)triggerLeadGenWithPresentingController:(UIViewController * _Nonnull)presentingController params:(NSDictionary<NSString *, NSString *> * _Nullable)params;
- (void)triggerLeadGenWithPresentingController:(UIViewController * _Nonnull)presentingController params:(NSDictionary<NSString *, NSString *> * _Nullable)params completion:(void (^ _Nonnull)(NSString * _Nullable))completion;
- (void)triggerLeadGenWithPresentingController:(UIViewController * _Nonnull)presentingController params:(NSDictionary<NSString *, NSString *> * _Nullable)params utmParams:(NSDictionary<NSString *, NSString *> * _Nullable)utmParams;
- (void)triggerLeadGenWithPresentingController:(UIViewController * _Nonnull)presentingController params:(NSDictionary<NSString *, NSString *> * _Nullable)params utmParams:(NSDictionary<NSString *, NSString *> * _Nullable)utmParams retargeting:(BOOL)retargeting;
- (void)triggerLeadGenWithPresentingController:(UIViewController * _Nonnull)presentingController params:(NSDictionary<NSString *, NSString *> * _Nullable)params utmParams:(NSDictionary<NSString *, NSString *> * _Nullable)utmParams retargeting:(BOOL)retargeting showLoginCta:(BOOL)showLoginCta completion:(void (^ _Nonnull)(NSString * _Nullable))completion;
@end



@class NSIndexPath;
@class UICollectionViewLayoutAttributes;

SWIFT_CLASS("_TtC9SCGateway33SeparatorCollectionViewFlowLayout")
@interface SeparatorCollectionViewFlowLayout : UICollectionViewFlowLayout
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareLayout;
- (UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForDecorationViewOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UtmParams;

SWIFT_CLASS("_TtC9SCGateway12SignUpConfig")
@interface SignUpConfig : NSObject
@property (nonatomic, copy) NSString * _Nonnull opaqueId;
@property (nonatomic, copy) NSString * _Nullable notes;
@property (nonatomic, strong) UtmParams * _Nullable utmParams;
- (nonnull instancetype)initWithOpaqueId:(NSString * _Nonnull)opaqueId notes:(NSString * _Nullable)notes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOpaqueId:(NSString * _Nonnull)opaqueId notes:(NSString * _Nullable)notes utmParams:(UtmParams * _Nullable)utmParams retargeting:(id _Nullable)retargeting OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOpaqueId:(NSString * _Nonnull)opaqueId notes:(NSString * _Nullable)notes retargeting:(id _Nullable)retargeting OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOpaqueId:(NSString * _Nonnull)opaqueId notes:(NSString * _Nullable)notes utmParams:(UtmParams * _Nullable)utmParams OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9SCGateway13SmallplugData")
@interface SmallplugData : NSObject
@property (nonatomic, copy) NSString * _Nullable targetEndpoint;
@property (nonatomic, copy) NSString * _Nullable params;
- (nonnull instancetype)init:(NSString * _Nullable)targetEndpoint :(NSString * _Nullable)params OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;

SWIFT_CLASS("_TtC9SCGateway17SmallplugUiConfig")
@interface SmallplugUiConfig : NSObject
@property (nonatomic, copy) NSString * _Nullable headerColor;
@property (nonatomic, copy) NSString * _Nullable backIconColor;
- (nonnull instancetype)initWithSmallplugHeaderColor:(NSString * _Nullable)smallplugHeaderColor headerColorOpacity:(NSNumber * _Nullable)headerColorOpacity backIconColor:(NSString * _Nullable)backIconColor backIconColorOpacity:(NSNumber * _Nullable)backIconColorOpacity OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9SCGateway24TransactionErrorResponse")
@interface TransactionErrorResponse : NSObject
@end

















SWIFT_CLASS("_TtC9SCGateway9UtmParams")
@interface UtmParams : NSObject
@property (nonatomic, copy) NSString * _Nullable utmSource;
@property (nonatomic, copy) NSString * _Nullable utmMedium;
@property (nonatomic, copy) NSString * _Nullable utmCampaign;
@property (nonatomic, copy) NSString * _Nullable utmContent;
@property (nonatomic, copy) NSString * _Nullable utmTerm;
- (nonnull instancetype)initWithUtmSource:(NSString * _Nullable)utmSource utmMedium:(NSString * _Nullable)utmMedium utmCampaign:(NSString * _Nullable)utmCampaign utmContent:(NSString * _Nullable)utmContent utmTerm:(NSString * _Nullable)utmTerm OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("_ObjCTransactionIntentCancelAmo")
@interface ObjCTransactionIntentCancelAmo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull response;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjCTransactionIntentConnect")
@interface ObjCTransactionIntentConnect : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull response;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjCTransactionIntentMfHoldingsImport")
@interface ObjCTransactionIntentMfHoldingsImport : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable data;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjCTransactionIntentSubscription")
@interface ObjCTransactionIntentSubscription : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull response;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjcTransactionIntentAuthoriseHoldings")
@interface ObjcTransactionIntentAuthoriseHoldings : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull authToken;
@property (nonatomic, readonly) BOOL status;
@property (nonatomic, readonly, copy) NSString * _Nonnull transactionId;
@property (nonatomic, readonly, strong) id _Nullable signup;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjcTransactionIntentFetchFunds")
@interface ObjcTransactionIntentFetchFunds : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull authToken;
@property (nonatomic, readonly) double fund;
@property (nonatomic, readonly, copy) NSString * _Nonnull transactionId;
@property (nonatomic, readonly, strong) id _Nullable signup;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjcTransactionIntentHoldingsImport")
@interface ObjcTransactionIntentHoldingsImport : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull authToken;
@property (nonatomic, readonly, copy) NSString * _Nonnull broker;
@property (nonatomic, readonly) BOOL status;
@property (nonatomic, readonly, copy) NSString * _Nonnull transactionId;
@property (nonatomic, readonly, strong) id _Nullable signup;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjcTransactionIntentSipSetup")
@interface ObjcTransactionIntentSipSetup : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull authToken;
@property (nonatomic, readonly) BOOL sipActive;
@property (nonatomic, readonly, copy) NSString * _Nonnull sipAction;
@property (nonatomic, readonly, copy) NSString * _Nonnull transactionId;
@property (nonatomic, readonly) double sipAmount;
@property (nonatomic, readonly, copy) NSString * _Nonnull frequency;
@property (nonatomic, readonly, copy) NSString * _Nonnull iscid;
@property (nonatomic, readonly, copy) NSString * _Nonnull scheduledDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull scid;
@property (nonatomic, readonly, copy) NSString * _Nonnull sipType;
@property (nonatomic, readonly, strong) id _Nullable signup;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("_ObjcTransactionIntentTransaction")
@interface ObjcTransactionIntentTransaction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull authToken;
@property (nonatomic, readonly, copy) NSString * _Nullable transaction;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
